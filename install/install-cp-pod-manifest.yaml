apiVersion: v1
kind: Pod
metadata:
  name: install-secondary-cp
  labels:
    app: paladin-installer
spec:
  # This nodeSelector will be dynamically replaced with a real node name
  nodeSelector:
    kubernetes.io/hostname: <NODE_NAME>

  restartPolicy: Never
  containers:
    - name: paladin-installer
      image: alpine:3.19
      command: ["/bin/sh", "-c"]
      args:
        - |
          set -euo pipefail
          apk add --no-cache git bash etcd-tools

          echo "[*] Cloning paladin repository..."
          git clone https://github.com/akash-network/akash-provider-paladin.git "$HOME/akash-provider-paladin"

          echo "[*] Preparing local directory..."
          mkdir -p "$HOME/provider"

          echo "[*] Fetching provider.yaml from etcd..."
          etcdctl get /akash-provider-paladin/provider.yaml \
            --cacert=/etc/ssl/etcd/ssl/ca.pem \
            --cert=/etc/ssl/etcd/ssl/node-node1.pem \
            --key=/etc/ssl/etcd/ssl/node-node1-key.pem \
            --print-value-only > "$HOME/provider/provider.yaml"

          echo "[*] Fetching price_script_generic.sh from etcd..."
          etcdctl get /akash-provider-paladin/price_script_generic.sh \
            --cacert=/etc/ssl/etcd/ssl/ca.pem \
            --cert=/etc/ssl/etcd/ssl/node-node1.pem \
            --key=/etc/ssl/etcd/ssl/node-node1-key.pem \
            --print-value-only > "$HOME/provider/price_script_generic.sh"

          chmod +x "$HOME/provider/price_script_generic.sh"

          echo "[*] Installing cron job for trigger-based rotation..."
          (crontab -l 2>/dev/null; echo "*/10 * * * * [ -f /tmp/rpc-rotate.do ] && /bin/bash /root/akash-provider-paladin/scripts/rpc-rotate.sh >> /var/log/rpc-rotate.log 2>&1 && rm -f /tmp/rpc-rotate.do") | crontab -

          echo "[âœ“] Secondary control plane initialization complete."

      volumeMounts:
        - name: root-home
          mountPath: /root
        - name: etcd-certs
          mountPath: /etc/ssl/etcd/ssl
          readOnly: true

  volumes:
    - name: root-home
      emptyDir: {}
    - name: etcd-certs
      hostPath:
        path: /etc/ssl/etcd/ssl
        type: Directory
